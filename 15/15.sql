USE UNIVER;

SELECT Teacher [Код_преподавателя], Teacher_Name [Имя_преподавателя], Gender[Пол], Pulpit [Кафедра] from TEACHER
where Pulpit = 'РИТ'
for xml raw('Преподаватель'), root('Список_преподавателей')

-------------------------------------------task 2------------------------------------------------------

SELECT AUDITORIUM_TYPE.Auditorium_TypeName [Тип_Аудитории], AUDITORIUM.Auditorium_Name [Номер_Аудитории],
       AUDITORIUM.Auditorium_Capacity [Вместимость_Аудитории]
	   From AUDITORIUM inner join AUDITORIUM_TYPE On AUDITORIUM.Auditorium_Type = AUDITORIUM_TYPE.Auditorium_Type
	   where AUDITORIUM_TYPE.Auditorium_Type like '%ЛК%'
	   order by [Тип_Аудитории]
	   for xml auto, root('Список_Аудиторий'), elements

-------------------------------------------task 3------------------------------------------------------

declare @xmlHandle int = 0,
      @xml varchar(2000) = '<?xml version="1.0" encoding="windows-1251" ?>
					<SUBJECTS> 
						<SUBJECTT SUBJECTT="ПН" SUBJECTT_NAME="Пение" PULPIT="РИТ" /> 
						<SUBJECTT SUBJECTT="РСВН" SUBJECTT_NAME="Рисование" PULPIT="ХТЭПиМЭЕ" /> 
						<SUBJECTT SUBJECTT="ТИХИЙ_ЧАС" SUBJECTT_NAME="Тихий час" PULPIT="ЭТиМ"  />  
					</SUBJECTS>'
exec sp_xml_preparedocument @xmlHandle output, @xml
SELECT * from openxml(@xmlHandle, '/SUBJECTS/SUBJECTT', 0)
	with(SUBJECTT char(10), SUBJECTT_NAME varchar(100), PULPIT char(20))       

begin tran
insert into SUBJECTT SELECT * from openxml(@xmlHandle, '/SUBJECTS/SUBJECTT', 0)
	with(SUBJECTT char(10), SUBJECTT_NAME varchar(100), PULPIT char(20)) 
SELECT * from SUBJECTT where SUBJECTT LIKE '%Н'
rollback tran
exec sp_xml_removedocument @xmlHandle

SELECT * from SUBJECTT

-------------------------------------------task 4------------------------------------------------------

begin tran
insert into STUDENT (IDGroup,Namee,Bday,Info)
values (	30,
			'Скайуокер Люк Энакенович', '1971-05-04',
'<Студент>
<Паспорт серия="CI" номер="1111111" дата="05.09.2017"/>
<Телефон>1234567</Телефон>
<Адрес>
       <Страна>Галактическая Республика</Страна>
       <Город>Татуин</Город>
       <Улица>Мос Эспа</Улица>
       <Дом>1</Дом>
       <Квартира>1</Квартира>
</Адрес>
</Студент>')

update STUDENT set INFO= '
<Студент>
	<Паспорт серия="MP" номер="1234567" дата="13.03.2022"/>
	<Телефон>1234567</Телефон>
	<Адрес>
		   <Страна>Беларусь</Страна>
		   <Город>Минск</Город>
		   <Улица>Белорусская</Улица>
		   <Дом>21</Дом>
		   <Квартира>414</Квартира>
	</Адрес>
</Студент>' where Info.value('(Студент/Адрес/Город)[1]','varchar(10)')='Татуин';

SELECT IDGroup,Namee,Bday, 
Info.value('(/Студент/Паспорт/@серия)[1]','varchar(10)') [Серия],
Info.value('(/Студент/Паспорт/@номер)[1]', 'varchar(10)') [Номер паспорта],
Info.query('/Студент/Адрес')[Адрес]
from  STUDENT;

rollback

-------------------------------------------task 5------------------------------------------------------

drop xml schema collection Student;

begin tran
CREATE xml schema collection Student as 
N'<?xml version="1.0" encoding="utf-16" ?>
<xs:schema attributeFormDefault="unqualified" 
   elementFormDefault="qualified"
   xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="Студент">
<xs:complexType><xs:sequence>
<xs:element name="Паспорт" maxOccurs="1" minOccurs="1">
  <xs:complexType>
    <xs:attribute name="Серия" type="xs:string" use="required" />
    <xs:attribute name="Номер" type="xs:unsignedInt" use="required"/>
    <xs:attribute name="Дата"  use="required"  >
	<xs:simpleType>  <xs:restriction base ="xs:string">
		<xs:pattern value="[0-9]{2}.[0-9]{2}.[0-9]{4}"/>
	 </xs:restriction> 	</xs:simpleType>
     </xs:attribute>
  </xs:complexType>
</xs:element>
<xs:element maxOccurs="3" name="Телефон" type="xs:unsignedInt"/>
<xs:element name="Адрес">   <xs:complexType><xs:sequence>
   <xs:element name="Страна" type="xs:string" />
   <xs:element name="Город" type="xs:string" />
   <xs:element name="Улица" type="xs:string" />
   <xs:element name="Дом" type="xs:string" />
   <xs:element name="Квартира" type="xs:string" />
</xs:sequence></xs:complexType>  </xs:element>
</xs:sequence></xs:complexType>
</xs:element></xs:schema>'

alter table STUDENT alter column Info xml(Student);

begin tran
insert into STUDENT (IDGroup,Namee,Bday,Info)
values (	30,
			'Скайуокер Люк Энакенович', '1971-05-04',
'<Студент>
<Паспорт серия="CI" номер="1111111" дата="05.09.2017"/>
<Телефон>1234567</Телефон>
<Адрес>
       <Страна>Галактическая Республика</Страна>
       <Город>Татуин</Город>
       <Улица>Мос Эспа</Улица>
       <Дом>1</Дом>
       <Квартира>1</Квартира>
</Адрес>
</Студент>')

update STUDENT set INFO= '
<Студент>
	<Паспорт серия="MP" номер="1234567" дата="13.03.2022"/>
	<Телефон>1234567</Телефон>
	<Адрес>
		   <Страна>Беларусь</Страна>
		   <Город>Минск</Город>
		   <Улица>Белорусская</Улица>
		   <Дом>21</Дом>
		   <Квартира>414</Квартира>
	</Адрес>
</Студент>' where Info.value('(Студент/Адрес/Город)[1]','varchar(10)')='Татуин';

SELECT IDGroup,Namee,Bday, 
Info.value('(/Студент/Паспорт/@серия)[1]','varchar(10)') [Серия],
Info.value('(/Студент/Паспорт/@номер)[1]', 'varchar(10)') [Номер паспорта],
Info.query('/Студент/Адрес')[Адрес]
from  STUDENT;

rollback

-------------------------------------------task 6------------------------------------------------------

SELECT rtrim(FACULTY.FACULTY) as '@код',
(SELECT COUNT(*) from PULPIT where PULPIT.FACULTY = FACULTY.FACULTY) as 'количество_кафедр',
(SELECT rtrim(PULPIT.PULPIT) as '@код',
(SELECT rtrim(TEACHER.TEACHER) as 'преподаватель/@код', TEACHER.TEACHER_NAME as 'преподаватель'

from TEACHER where TEACHER.PULPIT = PULPIT.PULPIT for xml path(''),type, root('преподаватели'))
from PULPIT where PULPIT.FACULTY = FACULTY.FACULTY for xml path('кафедра'), type, root('кафедры'))
from FACULTY for xml path('факультет'), type, root('университет')
